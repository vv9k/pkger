name: release

on:
  push:
    branches:
      - "!*"
    tags:
      - "**"
jobs:
  lint:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy,rustfmt
      - uses: actions/checkout@v3
      - run: make lint

  test:
    needs: [lint]
    strategy:
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rpm
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt -y update
          sudo apt -y install rpm
      - name: Test
        run: make test

  build_and_upload_artifacts:
    name: Upload Artifacts
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos]
        include:
        - build: linux
          os: ubuntu-latest
          target: x86_64-unknown-linux
        - build: macos
          os: macos-latest
          target: x86_64-apple-darwin

    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v3
      - name: Set version
        run: echo "PKGER_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Set archive name
        run: echo "PKGER_ARCHIVE=pkger-${{env.PKGER_VERSION}}-${{ matrix.target}}" >> $GITHUB_ENV
      - run: cargo build --release
        name: Release build
      - name: Install help2man mac
        if: matrix.os == 'macos-latest'
        run: brew install help2man
      - name: Install help2man ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt -y update
          sudo apt -y install help2man
      - name: Prepare archive directory
        run: mkdir pkger
      - name: Generate manual
        run: |
          help2man target/release/pkger > pkger/pkger.1
      - name: Move release files
        run: |
          mv target/release/pkger pkger/
          mv README.md pkger/
          mv LICENSE pkger/
      - name: Create archives
        run: |
          tar -zcvf ${{ env.PKGER_ARCHIVE }}.tar.gz pkger
          tar -Jcvf ${{ env.PKGER_ARCHIVE }}.tar.xz pkger
      - run: cp ${{ env.PKGER_ARCHIVE }}.tar.gz example/recipes/pkger-prebuilt/
        if: matrix.os == 'ubuntu-latest'
        name: Copy archive
      - run: ./pkger/pkger -c example/conf.yml build -s rpm -s deb -- pkger-prebuilt
        if: matrix.os == 'ubuntu-latest'
        name: Build deb and rpm packages
      - run: |
          cd example/output/pkger-deb && \
          mv pkger-prebuilt-${{env.PKGER_VERSION}}-0.amd64.deb pkger-${{env.PKGER_VERSION}}-0.amd64.deb
          cd ../pkger-rpm && \
          mv pkger-prebuilt-${{env.PKGER_VERSION}}-0.x86_64.rpm pkger-${{env.PKGER_VERSION}}-0.x86_64.rpm
        if: matrix.os == 'ubuntu-latest'
        name: Rename artifacts
      - name: Upload gz
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/pkger
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.PKGER_ARCHIVE }}.tar.gz
          asset_name: ${{ env.PKGER_ARCHIVE }}.tar.gz
          tag: ${{ env.PKGER_VERSION }}
          overwrite: true
      - name: Upload xz
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/pkger
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.PKGER_ARCHIVE }}.tar.xz
          asset_name: ${{ env.PKGER_ARCHIVE }}.tar.xz
          tag: ${{ env.PKGER_VERSION }}
          overwrite: true
      - name: Upload deb
        if: matrix.os == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/pkger
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: example/output/pkger-deb/pkger-${{env.PKGER_VERSION}}-0.amd64.deb
          asset_name: pkger-${{env.PKGER_VERSION}}-0.amd64.deb
          tag: ${{ env.PKGER_VERSION }}
          overwrite: true
      - name: Upload rpm
        if: matrix.os == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/pkger
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: example/output/pkger-rpm/pkger-${{env.PKGER_VERSION}}-0.x86_64.rpm
          asset_name: pkger-${{env.PKGER_VERSION}}-0.x86_64.rpm
          tag: ${{ env.PKGER_VERSION }}
          overwrite: true
